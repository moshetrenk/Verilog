module halfadder(S, C, x, y);
  input x, y;
  output S, C;
  xor U0(S, x, y);
  and U2(C, x, y);
endmodule

module fulladder(S, C, x, y, cin);
  input x, y, cin;
  output S, C;
  wire S1, D1, D2;
  halfadder HA1(S1, D1, x, y);
  halfadder HA2(S, D2, S1, cin);
  or g1(C, D2, D1);
endmodule

module Threebit_adder(S, C3, A, B, C0);
  input [2:0] A, B;
  input C0;
  output [2:0] S;
  output C3;
  wire C1, C2;
  fulladder FA0(S[0], C1, C0, A[0], B[0]);
  fulladder FA1(S[1], C2, C1, A[1], B[1]);
  fulladder FA2(S[2], C3, C2, A[2], B[2]);
endmodule

module adder_sub(S, C3, A, B, M);
  input [2:0] A, B;
  input M;
  output [2:0] S;
  output C3;
  wire [2:0] D;
  xor U0(D[0], B[0], M);
  xor U1(D[1], B[1], M);
  xor U2(D[2], B[2], M);
  Threebit_adder U3(S, C3, A, D, M);
endmodule
